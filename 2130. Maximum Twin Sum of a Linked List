/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int pairSum(ListNode* head) {
        int n = 0;
        int maxi = -1;
        ListNode* temp = head;
        while(temp!=nullptr){
            n++;
            temp = temp->next;
        }
        vector<int> v(n/2,0);
        temp = head;
        int count = 0;
        while(temp!=nullptr){
            if(count<n/2){
                v[count] += temp->val;
            }
            else{
                v[n - count - 1] += temp->val;
            }
            temp = temp->next;
            count++;
        }
        maxi = *max_element(v.begin(),v.end());
        return maxi;
    }
};
