class Bitset {
    string s;
    int cnt;
    int flp;
public:
    Bitset(int size) {
        s = "";
        for(int i=0; i<size; i++){
            s.push_back('0');
        }
        cnt = 0;
        flp = 0;
    }
    
    void fix(int idx) {
        if(s[idx]=='0' && flp%2==0){
            s[idx] = '1';
            cnt++;
        }
        else if(s[idx]=='1' && flp%2==1){
            s[idx] = '0';
            cnt++;
        }
    }
    
    void unfix(int idx) {
        if(s[idx]=='1' && flp%2==0){
            s[idx] = '0';
            cnt--;
        }
        else if(s[idx]=='0' && flp%2==1){
            s[idx] = '1';
            cnt--;
        }
    }
    
    void flip() {
        cnt = s.length()-cnt;
        flp++;
    }
    
    bool all() {
        return cnt==s.length();
    }
    
    bool one() {
        return cnt>=1;
    }
    
    int count() {
        return cnt;
    }
    
    string toString() {
        if(flp&1){
            string temp = "";
            for(int i=0; i<s.length(); i++){
                char ch = s[i]=='0' ? '1' : '0';
                temp.push_back(ch);
            }
            return temp;
        }
        return s;
    }
};

/**
 * Your Bitset object will be instantiated and called as such:
 * Bitset* obj = new Bitset(size);
 * obj->fix(idx);
 * obj->unfix(idx);
 * obj->flip();
 * bool param_4 = obj->all();
 * bool param_5 = obj->one();
 * int param_6 = obj->count();
 * string param_7 = obj->toString();
 */
