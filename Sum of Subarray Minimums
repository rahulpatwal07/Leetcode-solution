class Solution {
    int mod = 1e9+7;
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        long long ans = 0;
        stack<int> st;
        vector<int> prev(n,-1),suf(n,-1);
        for(int i=0; i<n; i++){
            while(st.size() && arr[st.top()] >= arr[i]){
                st.pop();
            }
            if(st.size()){
                prev[i] = st.top();
            }
            st.push(i);
        }
        while(st.size()){
            st.pop();
        }
        
        for(int i=n-1; i>=0; i--){
            while(st.size() && arr[st.top()] > arr[i]){
                st.pop();
            }
            if(st.size()){
                suf[i] = st.top();
            }
            st.push(i);
        }
        for(int i=0; i<n; i++){
            int l = prev[i]==-1 ? 0 : prev[i]+1;
            int r = suf[i]==-1 ? n-1 : suf[i]-1;
            ans += (1LL*arr[i] * (i-l+1)*(r-i+1))%mod;
            ans %= mod;
        }
        return (int)ans;
    }
};
