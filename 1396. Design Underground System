class UndergroundSystem {
    map<int,pair<string,int>> customer;
    map<pair<string,string>,vector<int>> train;
public:
    UndergroundSystem() {
        int n = 1;
    }
    
    void checkIn(int id, string stationName, int t) {
        customer[id].first = stationName;
        customer[id].second = t;
    }
    
    void checkOut(int id, string stationName, int t) {
        auto it = customer[id];
        string s1 = it.first;
        string s2 = stationName;
        int t1 = it.second;
        int t2 = t;
        train[{s1,s2}].push_back(t2-t1);
    }
    
    double getAverageTime(string startStation, string endStation) {
        int n = train[{startStation,endStation}].size();
        int sum = 0;
        for(auto it : train[{startStation,endStation}]){
            sum += it;
        }
        return (1.0*sum)/n;

    }
};

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem* obj = new UndergroundSystem();
 * obj->checkIn(id,stationName,t);
 * obj->checkOut(id,stationName,t);
 * double param_3 = obj->getAverageTime(startStation,endStation);
 */
