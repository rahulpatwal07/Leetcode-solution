class Solution {
    int solve(vector<vector<char>>& mat,int row,int col,vector<vector<int>> &dp){
        if(row>=mat.size() || col>=mat[0].size() || mat[row][col]=='0'){
            return 0;
        }
        if(dp[row][col]!=-1){
            return dp[row][col];
        }
        int first = 1+solve(mat,row+1,col+1,dp);
        int second = 1+solve(mat,row+1,col,dp);
        int third = 1+solve(mat,row,col+1,dp);
        return dp[row][col] = min(first,min(second,third));
    }
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int ans = 0;
        vector<vector<int>> dp(m,vector<int>(n,-1));
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(matrix[i][j]=='1'){
                    ans = max(ans,solve(matrix,i,j,dp));
                }
            }
        }
        return ans*ans;

    }
};
