class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int candidates) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        int n = costs.size();
        int i,j;
        for(i=0; i<candidates; i++){
            pq.push({costs[i],0});
        }
        for(j=n-1; j>n-1-candidates; j--){
            if(j<i){
                break;
            }
            pq.push({costs[j],1});
        }
        long long ans = 0;
        while(k>0){
            auto it = pq.top();
            pq.pop();
            ans += 1LL*it.first;
            if(it.second==0 && i<=j){
                pq.push({costs[i],0});
                i++;
            }
            else if(it.second==1 && i<=j){
                pq.push({costs[j],1});
                j--;
            }
            k--;
        }
        return ans;
    }
};
